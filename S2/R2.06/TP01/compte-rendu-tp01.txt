/*================================================================*/
/* Martins Felix - TP01 : Révisions - BD relationnelle et SQL simple
/*================================================================*/

/***********************************************************/
/* 1 - Afficher le nom des personnages des films de l'univers Marvel-Avengers dans l'ordre alphabétique.
/***********************************************************/
SELECT nom
FROM personnage
ORDER BY nom;

/***********************************************************/
/* 2 - A quelle question répond la requête SQL suivante
/***********************************************************/

-- Elle renvoie le nombre de films dans lesquels apparaît Iron Man.

/***********************************************************/
/* 3 - Afficher le nombre de films sortis chaque année
/***********************************************************/

SELECT annee, count(numero) AS nf
FROM film
GROUP BY annee
ORDER BY annee;

/***********************************************************/
/* 4 - Donner le nom des personnages jouant dans un film dont le titre contient son nom
/***********************************************************/

SELECT DISTINCT nom
FROM apparait_dans NATURAL JOIN film
WHERE titre LIKE '%'||nom||'%'
ORDER BY nom;

/***********************************************************/
/* 5 - Donner le nom des personnages dont l'état civil indique qu'ils sont nés dans l'état de New York
/***********************************************************/

SELECT e.nom
FROM etat_civil e JOIN personnage p ON e.nom = p.alias
WHERE e.etat = 'New York';

/***********************************************************/
/* 6 - A quelle question répond la requête SQL suivante
/***********************************************************/

-- Elle renvoie les titres de films réalisés par plus d'une personne

/***********************************************************/
/* 7 - Donner le titre des films n'ayant qu'un seul réalisateur, dans l'ordre alphabétique de leur titre
/***********************************************************/

SELECT titre
FROM film NATURAL JOIN realise
GROUP BY titre
HAVING COUNT(*) = 1
ORDER BY titre;

/***********************************************************/
/* 8 - Donner la liste des informations des personnages, complétées par leur état civil, s'ils en ont un
/***********************************************************/

SELECT p.nom, p.alias, e.annee, e.etat
FROM personnage p LEFT JOIN etat_civil e ON e.nom = p.alias
ORDER BY p.nom;

/***********************************************************/
/* 9 - Pour chaque film dont le titre commence par Avengers, donner le nombre de personnage qui y meurent
/***********************************************************/

SELECT titre, count(nom) AS nbm
FROM film NATURAL LEFT JOIN meurt_dans
WHERE titre LIKE 'Avengers%'
GROUP BY titre;

/***********************************************************/
/* 10 - Donner le titre des films où apparaît un personnage né dans l'état de Pennsylvanie
/***********************************************************/

SELECT f.titre, e.nom
FROM film f NATURAL JOIN apparait_dans a NATURAL JOIN personnage p JOIN etat_civil e ON p.alias = e.nom
WHERE e.etat = 'Pennsylvanie'
ORDER BY f.titre, e.nom;

/***********************************************************/
/* 11 - Pour chaque film où au moins un personnage apparaît en post-générique, donner son titre suivi du nombre de personnages avec alias qui apparaissent en post-générique
/***********************************************************/

SELECT titre, count(alias) AS nap
FROM film NATURAL JOIN apparait_dans NATURAL JOIN personnage
WHERE post_generique
GROUP BY titre
ORDER BY nap DESC, titre;

/***********************************************************/
/* 12 - Pour chaque paire de personnages, afficher leurs noms suivis du nombre de films dans lesquels ils apparaissent ensemble, si ce nombre est au moins égal à 5.
/***********************************************************/

SELECT a1.nom AS nom1, a2.nom AS nom2, count(a1.numero) AS ne
FROM apparait_dans a1 JOIN apparait_dans a2 ON a1.numero = a2.numero
WHERE a1.nom < a2.nom
GROUP BY a1.nom, a2.nom
HAVING count(a1.numero) >= 5
ORDER BY ne DESC;

/***********************************************************/
/* 13 - Pour chaque réalisateur, donner son nom suivi de l'année de son premier film, celle de son dernier film, puis le nombre d'années participant à cet intervalle de temps
/***********************************************************/

SELECT realisateur, min(annee), max(annee), max(annee)-min(annee) AS intervalle
FROM film NATURAL JOIN realise
GROUP BY realisateur
ORDER BY intervalle DESC;